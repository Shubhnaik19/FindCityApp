{"ast":null,"code":"var _jsxFileName = \"/home/shubh/Videos/projectCity/projectFindCity/web/project_city/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [],\n      initialLetter: '',\n      submit: false\n    };\n\n    this.onClear = () => {\n      this.setState({\n        initialLetter: '',\n        cities: []\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.initialLetter === '') {//  setAlert('Please enter something!!!!!!', 'light');\n      } else {\n        this.searchCities(this.state.initialLetter);\n      }\n\n      console.log(this.state.initialLetter);\n    };\n\n    this.onChange = async e => {\n      this.setState({\n        initialLetter: e.target.value\n      });\n\n      if (e.target.value !== '') {\n        const res = await axios.get(`http://localhost:8080/city?letter=${e.target.value}`);\n        this.setState({\n          cities: res.data.list\n        });\n        console.log(res.data);\n      }\n    };\n\n    this.searchCities = async () => {\n      const res = await axios.get(`http://localhost:8080/city?letter=${this.state.initialLetter}`);\n      this.setState({\n        cities: res.data.list\n      });\n      console.log(res.data);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search the city with initial letter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          value: this.state.initialLetter,\n          onChange: this.onChange,\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          name: \"submit\",\n          className: \"btn btn-dark btn-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), this.state.initialLetter !== '' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"clear\",\n          onClick: this.onClear,\n          value: \"Clear\",\n          className: \"btn btn-dark btn-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), this.state.initialLetter !== '' && this.state.cities !== [] && this.state.cities !== null && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Number of cities starting with \", this.state.initialLetter, \" is \", this.state.cities.length, this.state.cities.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shubh/Videos/projectCity/projectFindCity/web/project_city/src/App.js"],"names":["Component","axios","App","state","cities","initialLetter","submit","onClear","setState","onSubmit","e","preventDefault","searchCities","console","log","onChange","target","value","res","get","data","list","render","length","map","city","name"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Component} from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    cities: [],\n    initialLetter:'',\n    submit: false\n  }\n\n  onClear = () => {\n    this.setState({initialLetter:'',cities:[]})\n  }\n  onSubmit = (e) =>{\n    e.preventDefault();\n       if(this.state.initialLetter === ''){\n          //  setAlert('Please enter something!!!!!!', 'light');\n       } else {\n       this.searchCities(this.state.initialLetter);\n       }console.log(this.state.initialLetter) \n  }\n  onChange = async (e) =>{\n    this.setState({initialLetter:e.target.value})\n    if(e.target.value!== ''){\n    const res = await axios.get(\n      `http://localhost:8080/city?letter=${e.target.value}`\n    );\n    this.setState({\n      cities: res.data.list,\n    });\n    console.log(res.data);\n  }\n  }\n  searchCities = async () => {\n    const res = await axios.get(\n      `http://localhost:8080/city?letter=${this.state.initialLetter}`\n    );\n    this.setState({\n      cities: res.data.list,\n    });\n    console.log(res.data);\n  };\n  render(){\n  return (\n    <div className=\"App\">\n      <h1>Search the city with initial letter:</h1>\n      <form className='form' onSubmit={this.onSubmit}>\n                    <input type='text' name='text' value={this.state.initialLetter} onChange={this.onChange} placeholder='Search'/>\n                    <input type='submit' name='submit' className='btn btn-dark btn-block' />\n                    {this.state.initialLetter !== '' &&\n                    <input type='button' name='clear' onClick={this.onClear} value='Clear' className='btn btn-dark btn-block' />\n    }\n                </form>\n      {this.state.initialLetter !== '' && this.state.cities !== [] && this.state.cities !== null &&\n      <h1>Number of cities starting with {this.state.initialLetter} is {this.state.cities.length}\n      {this.state.cities.map(city => <div>{city.name}</div>)} </h1> \n  }\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}